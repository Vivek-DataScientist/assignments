classify the Size_Categorie using SVM

month	month of the year: 'jan' to 'dec'
day	day of the week: 'mon' to 'sun'
FFMC	FFMC index from the FWI system: 18.7 to 96.20
DMC	DMC index from the FWI system: 1.1 to 291.3
DC	DC index from the FWI system: 7.9 to 860.6
ISI	ISI index from the FWI system: 0.0 to 56.10
temp	temperature in Celsius degrees: 2.2 to 33.30
RH	relative humidity in %: 15.0 to 100
wind	wind speed in km/h: 0.40 to 9.40
rain	outside rain in mm/m2 : 0.0 to 6.4
Size_Categorie 	the burned area of the forest ( Small , Large)


#read a dataset
forest<-read.csv("C:\\Users\\jeeva\\Downloads\\R assignment\\svm\\forestfires.csv")

#take columns from 3 to 31
forest1<-forest[,3:31]

#change output columns in 1st place
forest1<-forest1[,c(29,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28)]

#split into train and test
forest_train=forest1[1:399,]
forest_test=forest1[400:517,]

##Training a model on the data ----
# begin by training a simple linear SVM
library(kernlab)
#doing a Model with KSVM technique which kernel is vanniladot
forest_classifier <- ksvm(size_category ~ ., data = forest_train,kernel = "vanilladot")
forest_classifier#Training error : 0 support vectors : 12

#predict testing data with model
forest_predictions <- predict(forest_classifier, forest_test)
table(forest_predictions, forest_test$size_category)
agreement1 <- forest_predictions == forest_test$size_category
table(agreement1)#False 4 True 114
prop.table(table(agreement1))
#FALSE       TRUE 
#0.03389831 0.96610169 #high accuracy so we use this kernel

#improving model performance

#doing a model with ksvm technique where kernel is rbfdot
forest_classifier <- ksvm(size_category ~ ., data = forest_train,kernel = "rbfdot")
forest_classifier #Training error : 0.0.130 Number of Support Vectors : 201

#predict testing data with model
forest_predictions <- predict(forest_classifier, forest_test)
table(forest_predictions,forest_test$size_category)
agreement2 <- forest_predictions == forest_test$size_category
table(agreement2)
prop.table(table(agreement2))
#FALSE      TRUE 
#0.2881356 0.7118644  #less true accuracy so this is not correct

#improving model performance
#doing a model with ksvm technique where kernel is polydot
forest_classifier <- ksvm(size_category ~ ., data = forest_train,kernel = "polydot")
forest_classifier #Training error : 0 support vector=12

#predict testing data with model
forest_predictions <- predict(forest_classifier, forest_test)
table(forest_predictions,forest_test$size_category)
agreement2 <- forest_predictions == forest_test$size_category
table(agreement2)
prop.table(table(agreement2))
#FALSE       TRUE 
#0.03389831 0.96610169 #high true accuracy so we go polydot

#doing a model with ksvm technique where kernel is anovaedot
forest_classifier <- ksvm(size_category ~ ., data = forest_train,kernel = "anovadot")
forest_classifier #Training error :0  support vector=196

#predict testing data with model
forest_predictions <- predict(forest_classifier, forest_test)
table(forest_predictions,forest_test$size_category)
agreement2 <- forest_predictions == forest_test$size_category
table(agreement2)
prop.table(table(agreement2))
#FALSE      TRUE 
#0.1101695 0.8898305 #less accuracy compared with polydot..so we go for polydot
